{"version":3,"sources":["./src/app/resolvers/dashboards.resolver.ts","./src/app/services/dashboards.service.ts"],"names":[],"mappings":"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","file":"default~dashboards-dashboards-module~home-home-module~records-records-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport { DashboardsService } from '../services/dashboards.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class EcommerceDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getRecentOrdersTableData(),\r\n        this.dashboardService.getLatestTicketsTableData()\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          recentOrdersData: data[0],\r\n          latestTicketsData: data[1]\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n@Injectable()\r\nexport class DataVizResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              current: data[0],\r\n              team: data[1],\r\n              NY: data[2],\r\n              NJ: data[3],\r\n              PA: data[4],\r\n              MI: data[5],\r\n              MA: data[6],\r\n              dec28:data[7],\r\n              jan5:data[8]\r\n\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class crmDashboardResolver implements Resolve<any> {\r\n\r\n  constructor(private dashboardService: DashboardsService) {}\r\n\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n          this.dashboardService.getAdvisors()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              articles: data[1],\r\n              tasks: data[2],\r\n              covid: data[3],\r\n              advisors:data[4]\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CrmDashboardResolver implements Resolve<any> {\r\n\r\n  constructor(private dashboardService: DashboardsService) {}\r\n\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getLeadsTableData(),\r\n        this.dashboardService.getTopSellersData(),\r\n        this.dashboardService.getLaggingSellersData(),\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getAdvisors()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              leadsData: data[0],\r\n              topSellers: data[1],\r\n              laggingSellers: data[2],\r\n              articles: data[3],\r\n              tasks: data[4],\r\n              covid:data[5],\r\n              advisors:data[6]\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PlayerDetailResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve(route: ActivatedRouteSnapshot,state: RouterStateSnapshot) {\r\n    return this.dashboardService.getPlayerById(route.paramMap.get('id'));\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TeamDetailResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve(route: ActivatedRouteSnapshot,state: RouterStateSnapshot) {\r\n    return this.dashboardService.getTeamById(+route.paramMap.get('id'));\r\n  }\r\n}\r\n\r\n\r\n// @Injectable()\r\n// export class StraightNastyCovidResolver implements Resolve<any> {\r\n//   constructor(private dashboardService: DashboardsService) {}\r\n//   resolve() {\r\n//     return new Promise((resolve, reject) => {\r\n//       forkJoin([\r\n//         this.dashboardService.getLeadsTableData(),\r\n//         this.dashboardService.getTopSellersData(),\r\n//         this.dashboardService.getLaggingSellersData(),\r\n//         this.dashboardService.getArticles(),\r\n//         this.dashboardService.getTasks(),\r\n//         this.dashboardService.getTeam()\r\n//       ])\r\n//           .subscribe((data: any) => {\r\n//             return resolve({\r\n//               leadsData: data[0],\r\n//               topSellers: data[1],\r\n//               laggingSellers: data[2],\r\n//               articles: data[3],\r\n//               tasks: data[4],\r\n//               team: data[5]\r\n//             });\r\n//           });\r\n//     });\r\n//   }\r\n// }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport {CovidInterface} from \"../interfaces/covid.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {BigCovidProps} from \"../interfaces/covid.class\";\nimport {NumbersInterface} from \"../interfaces/numbers.interface\";\nimport {deaths} from \"../interfaces/numbers.interface\";\nimport {findAll} from \"@angular/compiler-cli/ngcc/src/utils\";\nimport {id} from \"@swimlane/ngx-charts/release/utils\";\n\n\n@Injectable()\nexport class DashboardsService {\n\n    private globalJson: string = \"/assets/data/covidglobal.json\";\n    private rankings: string = \"/assets/data/rank.json\";\n // https://api.covidtracking.com/v1/us/20201201.json\n   private currentApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n   private jan5: string = 'https://api.covidtracking.com/v1/us/20210105.json';\n    private dec28: string = 'https://api.covidtracking.com/v1/us/20201228.json';\n private janOneApi: string ='https://api.covidtracking.com/v1/us/20210101.json';\n private novOneApi: string = 'https://api.covidtracking.com/v1/us/20201101.json';\nprivate decOneApi: string = \"https://api.covidtracking.com/v1/us/20201201.json\";\n  private pacovidApi: string = 'https://api.covidtracking.com/v1/states/pa/info.json';\n  private njcovidApi: string = 'https://api.covidtracking.com/v1/states/nj/info.json';\n  private nycovidApi: string = 'https://api.covidtracking.com/v1/states/ma/info.json';\n  private macovidApi: string = 'https://api.covidtracking.com/v1/states/ca/info.json';\n  private micovidApi: string = 'https://api.covidtracking.com/v1/states/mi/info.json';\n  private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n  private currentCovidApi: string ='https://api.covidtracking.com/v1/us/current.json';\n  private baseApi : string = 'https://api.covidtracking.com/v1/us/';\n    private newsApi: string = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n    private teamApi: string = '/assets/data/team.json';\n    private covidSummaryApi: string = 'https://api.covid19api.com/summary';\n// historical api calls\n\n private lastDecCovidApi : string = 'https://api.covidtracking.com/v1/us/20201201.json';\n  constructor(private http: HttpClient) {\n  }\n\n    // getPolicyData(): Observable<PolicyModel[]> {\n    //     return this.http.get<PolicyModel[]>(this.policyApi).pipe(\n    //         map(results => results[\"policies\"])\n    //\n    //     );\n    // }\n    httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'X-Access-Token':'5cf9dfd5-3449-485e-b5ae-70a60e997864'\n        })\n    };\n\n    getCovidSummary(): Observable<any> {\n        return this.http.get<any>(this.covidSummaryApi).pipe(\n            map(res => res[\"Countries\"])\n        );\n    }\n\n    getCovidGlobal(): Observable<any> {\n        return this.http.get('../assets/data/covidglobal.json');\n    }\n\n    getCurrentRank(): Observable<any> {\n        return this.http.get<any>('../assets/data/mock-data/idrankings.json');\n    }\n\n    getNewRankings(): Observable<any> {\n        return this.http.get<any>(this.rankings);\n    }\n    getCovidByEurope(): Observable<any> {\n      return this.http.get<any>(this.globalJson).pipe(\n          map(data => {\n              data.find(data.region === 'Europe')\n          })\n\n      )\n    }\n\n    getPlayerById(id:string): Observable<any> {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n\n    // team detail method\n\n    getTeamById(id: number): Observable<any> {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n\n  getCovidByDate(param:NumbersInterface):Observable<NumbersInterface[]> {\n      return this.http.get<NumbersInterface[]>(this.baseApi+param + `.json`);\n  }\n\n    getCovid(): Observable<any> {\n        return this.http.get<any>(this.covidApi);\n    }\n    // filterStates(): Observable<any> {\n    //     return this.http.get<any>(this.covidApi).pipe(\n    //         map(res => )\n    //     )\n    // }\n\n    getDeathProp(): Observable<CovidInterface[]> {\n        return this.http.get<CovidInterface[]>(this.covidApi).pipe(\n            map(result =>\n                    result.filter(data => data.death == data.death)\n            )\n        );\n    }\n\n    getCovidTypes(): Observable<CovidInterface> {\n      return this.http.get<CovidInterface>(this.covidApi);\n    }\n\n  getJan5(): Observable<any> {\n      return this.http.get<any>(this.jan5);\n  }\n\n\n\n\n    getNewsHeadlines(): Observable<any> {\n        return this.http.get<any>(this.newsApi);\n    }\n\n    getDec28(): Observable<any> {\n        return this.http.get<any>(this.dec28);\n    }\n\n    getCovidDeath():Observable<deaths> {\n      return this.http.get<deaths>(this.covidApi);\n  }\n\n\n  // getCovidFields(): Observable<BigCovidProps[]> {\n  //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n  //       map((res) =>\n  //\n  //     )\n  //   );\n  // }\n\n    getCurrentCovidData():Observable<any> {\n        return this.http.get<any>(this.currentCovidApi);\n    }\n\n  getAllStatesCovid(): Observable<any> {\n    return this.http.get<any>(this.covidApi);\n  }\n\n  getPACovid(): Observable<any> {\n    return this.http.get<any>(this.pacovidApi);\n  }\n  getDecCovid(): Observable<any> {\n    return this.http.get<any>(this.decOneApi);\n  }\n    getJanCovid(): Observable<any> {\n    return this.http.get<any>(this.janOneApi);\n  }\n     getNovCovid(): Observable<any> {\n    return this.http.get<any>(this.novOneApi);\n  }\n\n  getNJCovid(): Observable<any> {\n    return this.http.get<any>(this.njcovidApi);\n  }\n\n  getNYCovid(): Observable<any> {\n    return this.http.get<any>(this.nycovidApi);\n  }\n\n  getMACovid(): Observable<any> {\n    return this.http.get<any>(this.macovidApi);\n  }\n\n  getMICovid(): Observable<any> {\n    return this.http.get<any>(this.micovidApi);\n  }\n\n  // team dashboard\n  getTeam(): Observable<any> {\n    return this.http.get('/assets/data/team.json');\n  }\n\n  // test - for global api\n\n    getGlobalCovid(): Observable<any> {\n      return this.http.get<any>(this.globalJson);\n    }\n\n\n    getAdvisors(): Observable<any> {\n        return this.http.get('/assets/data/advisors.json');\n    }\n\n  // ecommerce dashboard\n  getRecentOrdersTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n  }\n\n  getLatestTicketsTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n  }\n\n  // crm dashboard\n  getLeadsTableData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n  }\n\n  getTopSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n  }\n\n  getLaggingSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n  }\n\n  getArticles(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/articles.json');\n  }\n\n  getTasks(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/tasks.json');\n  }\n}\n\n\n"],"sourceRoot":"webpack:///"}