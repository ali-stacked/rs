{"version":3,"sources":["default~dashboards-dashboards-module~home-home-module~records-records-module-es5.js","webpack:///src/app/resolvers/dashboards.resolver.ts","webpack:///src/app/services/dashboards.service.ts"],"names":[],"mappings":"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","file":"x","sourcesContent":["(window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || []).push([[\"default~dashboards-dashboards-module~home-home-module~records-records-module\"],{\n\n/***/ \"./src/app/resolvers/dashboards.resolver.ts\":\n/*!**************************************************!*\\\n  !*** ./src/app/resolvers/dashboards.resolver.ts ***!\n  \\**************************************************/\n/*! exports provided: EcommerceDashboardResolver, DataVizResolver, crmDashboardResolver, CrmDashboardResolver, PlayerDetailResolver, TeamDetailResolver */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"EcommerceDashboardResolver\", function() { return EcommerceDashboardResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DataVizResolver\", function() { return DataVizResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"crmDashboardResolver\", function() { return crmDashboardResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"CrmDashboardResolver\", function() { return CrmDashboardResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PlayerDetailResolver\", function() { return PlayerDetailResolver; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"TeamDetailResolver\", function() { return TeamDetailResolver; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/dashboards.service */ \"./src/app/services/dashboards.service.ts\");\n/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs */ \"./node_modules/rxjs/_esm2015/index.js\");\n\n\n\n\nlet EcommerceDashboardResolver = class EcommerceDashboardResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getRecentOrdersTableData(),\n                this.dashboardService.getLatestTicketsTableData()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    recentOrdersData: data[0],\n                    latestTicketsData: data[1]\n                });\n            });\n        });\n    }\n};\nEcommerceDashboardResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nEcommerceDashboardResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], EcommerceDashboardResolver);\n\nlet DataVizResolver = class DataVizResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getAllStatesCovid(),\n                this.dashboardService.getTeam(),\n                this.dashboardService.getNYCovid(),\n                this.dashboardService.getNJCovid(),\n                this.dashboardService.getPACovid(),\n                this.dashboardService.getMICovid(),\n                this.dashboardService.getMACovid()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    current: data[0],\n                    team: data[1],\n                    NY: data[2],\n                    NJ: data[3],\n                    PA: data[4],\n                    MI: data[5],\n                    MA: data[6],\n                    dec28: data[7],\n                    jan5: data[8]\n                });\n            });\n        });\n    }\n};\nDataVizResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nDataVizResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], DataVizResolver);\n\nlet crmDashboardResolver = class crmDashboardResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getArticles(),\n                this.dashboardService.getTasks(),\n                this.dashboardService.getAllStatesCovid(),\n                this.dashboardService.getAdvisors()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    articles: data[1],\n                    tasks: data[2],\n                    covid: data[3],\n                    advisors: data[4]\n                });\n            });\n        });\n    }\n};\ncrmDashboardResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\ncrmDashboardResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], crmDashboardResolver);\n\nlet CrmDashboardResolver = class CrmDashboardResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve() {\n        return new Promise((resolve, reject) => {\n            Object(rxjs__WEBPACK_IMPORTED_MODULE_3__[\"forkJoin\"])([\n                this.dashboardService.getLeadsTableData(),\n                this.dashboardService.getTopSellersData(),\n                this.dashboardService.getLaggingSellersData(),\n                this.dashboardService.getArticles(),\n                this.dashboardService.getTasks(),\n                this.dashboardService.getAllStatesCovid(),\n                this.dashboardService.getAdvisors()\n            ])\n                .subscribe((data) => {\n                return resolve({\n                    leadsData: data[0],\n                    topSellers: data[1],\n                    laggingSellers: data[2],\n                    articles: data[3],\n                    tasks: data[4],\n                    covid: data[5],\n                    advisors: data[6]\n                });\n            });\n        });\n    }\n};\nCrmDashboardResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nCrmDashboardResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], CrmDashboardResolver);\n\nlet PlayerDetailResolver = class PlayerDetailResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve(route, state) {\n        return this.dashboardService.getPlayerById(route.paramMap.get('id'));\n    }\n};\nPlayerDetailResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nPlayerDetailResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], PlayerDetailResolver);\n\nlet TeamDetailResolver = class TeamDetailResolver {\n    constructor(dashboardService) {\n        this.dashboardService = dashboardService;\n    }\n    resolve(route, state) {\n        return this.dashboardService.getTeamById(+route.paramMap.get('id'));\n    }\n};\nTeamDetailResolver.ctorParameters = () => [\n    { type: _services_dashboards_service__WEBPACK_IMPORTED_MODULE_2__[\"DashboardsService\"] }\n];\nTeamDetailResolver = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], TeamDetailResolver);\n\n// @Injectable()\n// export class StraightNastyCovidResolver implements Resolve<any> {\n//   constructor(private dashboardService: DashboardsService) {}\n//   resolve() {\n//     return new Promise((resolve, reject) => {\n//       forkJoin([\n//         this.dashboardService.getLeadsTableData(),\n//         this.dashboardService.getTopSellersData(),\n//         this.dashboardService.getLaggingSellersData(),\n//         this.dashboardService.getArticles(),\n//         this.dashboardService.getTasks(),\n//         this.dashboardService.getTeam()\n//       ])\n//           .subscribe((data: any) => {\n//             return resolve({\n//               leadsData: data[0],\n//               topSellers: data[1],\n//               laggingSellers: data[2],\n//               articles: data[3],\n//               tasks: data[4],\n//               team: data[5]\n//             });\n//           });\n//     });\n//   }\n// }\n\n\n/***/ }),\n\n/***/ \"./src/app/services/dashboards.service.ts\":\n/*!************************************************!*\\\n  !*** ./src/app/services/dashboards.service.ts ***!\n  \\************************************************/\n/*! exports provided: DashboardsService */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"DashboardsService\", function() { return DashboardsService; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ \"./node_modules/tslib/tslib.es6.js\");\n/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ \"./node_modules/@angular/core/fesm2015/core.js\");\n/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common/http */ \"./node_modules/@angular/common/fesm2015/http.js\");\n/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ \"./node_modules/rxjs/_esm2015/operators/index.js\");\n\n\n\n\nlet DashboardsService = class DashboardsService {\n    constructor(http) {\n        this.http = http;\n        this.globalJson = \"/assets/data/covidglobal.json\";\n        this.rankings = \"/assets/data/rank.json\";\n        // https://api.covidtracking.com/v1/us/20201201.json\n        this.currentApi = 'https://api.covidtracking.com/v1/us/current.json';\n        this.jan5 = 'https://api.covidtracking.com/v1/us/20210105.json';\n        this.dec28 = 'https://api.covidtracking.com/v1/us/20201228.json';\n        this.janOneApi = 'https://api.covidtracking.com/v1/us/20210101.json';\n        this.novOneApi = 'https://api.covidtracking.com/v1/us/20201101.json';\n        this.decOneApi = \"https://api.covidtracking.com/v1/us/20201201.json\";\n        this.pacovidApi = 'https://api.covidtracking.com/v1/states/pa/info.json';\n        this.njcovidApi = 'https://api.covidtracking.com/v1/states/nj/info.json';\n        this.nycovidApi = 'https://api.covidtracking.com/v1/states/ma/info.json';\n        this.macovidApi = 'https://api.covidtracking.com/v1/states/ca/info.json';\n        this.micovidApi = 'https://api.covidtracking.com/v1/states/mi/info.json';\n        this.covidApi = 'https://api.covidtracking.com/v1/us/current.json';\n        this.currentCovidApi = 'https://api.covidtracking.com/v1/us/current.json';\n        this.baseApi = 'https://api.covidtracking.com/v1/us/';\n        this.newsApi = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n        this.teamApi = '/assets/data/team.json';\n        this.covidSummaryApi = 'https://api.covid19api.com/summary';\n        // historical api calls\n        this.lastDecCovidApi = 'https://api.covidtracking.com/v1/us/20201201.json';\n        // getPolicyData(): Observable<PolicyModel[]> {\n        //     return this.http.get<PolicyModel[]>(this.policyApi).pipe(\n        //         map(results => results[\"policies\"])\n        //\n        //     );\n        // }\n        this.httpOptions = {\n            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpHeaders\"]({\n                'Content-Type': 'application/json',\n                'X-Access-Token': '5cf9dfd5-3449-485e-b5ae-70a60e997864'\n            })\n        };\n    }\n    getCovidSummary() {\n        return this.http.get(this.covidSummaryApi).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(res => res[\"Countries\"]));\n    }\n    getCovidGlobal() {\n        return this.http.get('../assets/data/covidglobal.json');\n    }\n    getCurrentRank() {\n        return this.http.get('../assets/data/mock-data/idrankings.json');\n    }\n    getNewRankings() {\n        return this.http.get(this.rankings);\n    }\n    getCovidByEurope() {\n        return this.http.get(this.globalJson).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(data => {\n            data.find(data.region === 'Europe');\n        }));\n    }\n    getPlayerById(id) {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n    // team detail method\n    getTeamById(id) {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n    getCovidByDate(param) {\n        return this.http.get(this.baseApi + param + `.json`);\n    }\n    getCovid() {\n        return this.http.get(this.covidApi);\n    }\n    // filterStates(): Observable<any> {\n    //     return this.http.get<any>(this.covidApi).pipe(\n    //         map(res => )\n    //     )\n    // }\n    getDeathProp() {\n        return this.http.get(this.covidApi).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__[\"map\"])(result => result.filter(data => data.death == data.death)));\n    }\n    getCovidTypes() {\n        return this.http.get(this.covidApi);\n    }\n    getJan5() {\n        return this.http.get(this.jan5);\n    }\n    getNewsHeadlines() {\n        return this.http.get(this.newsApi);\n    }\n    getDec28() {\n        return this.http.get(this.dec28);\n    }\n    getCovidDeath() {\n        return this.http.get(this.covidApi);\n    }\n    // getCovidFields(): Observable<BigCovidProps[]> {\n    //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n    //       map((res) =>\n    //\n    //     )\n    //   );\n    // }\n    getCurrentCovidData() {\n        return this.http.get(this.currentCovidApi);\n    }\n    getAllStatesCovid() {\n        return this.http.get(this.covidApi);\n    }\n    getPACovid() {\n        return this.http.get(this.pacovidApi);\n    }\n    getDecCovid() {\n        return this.http.get(this.decOneApi);\n    }\n    getJanCovid() {\n        return this.http.get(this.janOneApi);\n    }\n    getNovCovid() {\n        return this.http.get(this.novOneApi);\n    }\n    getNJCovid() {\n        return this.http.get(this.njcovidApi);\n    }\n    getNYCovid() {\n        return this.http.get(this.nycovidApi);\n    }\n    getMACovid() {\n        return this.http.get(this.macovidApi);\n    }\n    getMICovid() {\n        return this.http.get(this.micovidApi);\n    }\n    // team dashboard\n    getTeam() {\n        return this.http.get('/assets/data/team.json');\n    }\n    // test - for global api\n    getGlobalCovid() {\n        return this.http.get(this.globalJson);\n    }\n    getAdvisors() {\n        return this.http.get('/assets/data/advisors.json');\n    }\n    // ecommerce dashboard\n    getRecentOrdersTableData() {\n        return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n    }\n    getLatestTicketsTableData() {\n        return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n    }\n    // crm dashboard\n    getLeadsTableData() {\n        return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n    }\n    getTopSellersData() {\n        return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n    }\n    getLaggingSellersData() {\n        return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n    }\n    getArticles() {\n        return this.http.get('/assets/data/crm-dashboard/articles.json');\n    }\n    getTasks() {\n        return this.http.get('/assets/data/crm-dashboard/tasks.json');\n    }\n};\nDashboardsService.ctorParameters = () => [\n    { type: _angular_common_http__WEBPACK_IMPORTED_MODULE_2__[\"HttpClient\"] }\n];\nDashboardsService = tslib__WEBPACK_IMPORTED_MODULE_0__[\"__decorate\"]([\n    Object(_angular_core__WEBPACK_IMPORTED_MODULE_1__[\"Injectable\"])()\n], DashboardsService);\n\n\n\n/***/ })\n\n}]);\n//# sourceMappingURL=default~dashboards-dashboards-module~home-home-module~records-records-module-es2015.js.map","import { Injectable } from '@angular/core';\r\nimport {ActivatedRouteSnapshot, Resolve, RouterStateSnapshot} from '@angular/router';\r\nimport { DashboardsService } from '../services/dashboards.service';\r\nimport { forkJoin } from 'rxjs';\r\n\r\n\r\n@Injectable()\r\nexport class EcommerceDashboardResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getRecentOrdersTableData(),\r\n        this.dashboardService.getLatestTicketsTableData()\r\n      ])\r\n      .subscribe((data: any) => {\r\n        return resolve({\r\n          recentOrdersData: data[0],\r\n          latestTicketsData: data[1]\r\n        });\r\n      });\r\n    });\r\n  }\r\n}\r\n@Injectable()\r\nexport class DataVizResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getTeam(),\r\n        this.dashboardService.getNYCovid(),\r\n        this.dashboardService.getNJCovid(),\r\n        this.dashboardService.getPACovid(),\r\n        this.dashboardService.getMICovid(),\r\n        this.dashboardService.getMACovid()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              current: data[0],\r\n              team: data[1],\r\n              NY: data[2],\r\n              NJ: data[3],\r\n              PA: data[4],\r\n              MI: data[5],\r\n              MA: data[6],\r\n              dec28:data[7],\r\n              jan5:data[8]\r\n\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Injectable()\r\nexport class crmDashboardResolver implements Resolve<any> {\r\n\r\n  constructor(private dashboardService: DashboardsService) {}\r\n\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n          this.dashboardService.getAdvisors()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              articles: data[1],\r\n              tasks: data[2],\r\n              covid: data[3],\r\n              advisors:data[4]\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class CrmDashboardResolver implements Resolve<any> {\r\n\r\n  constructor(private dashboardService: DashboardsService) {}\r\n\r\n  resolve() {\r\n    return new Promise((resolve, reject) => {\r\n      forkJoin([\r\n        this.dashboardService.getLeadsTableData(),\r\n        this.dashboardService.getTopSellersData(),\r\n        this.dashboardService.getLaggingSellersData(),\r\n        this.dashboardService.getArticles(),\r\n        this.dashboardService.getTasks(),\r\n        this.dashboardService.getAllStatesCovid(),\r\n        this.dashboardService.getAdvisors()\r\n      ])\r\n          .subscribe((data: any) => {\r\n            return resolve({\r\n              leadsData: data[0],\r\n              topSellers: data[1],\r\n              laggingSellers: data[2],\r\n              articles: data[3],\r\n              tasks: data[4],\r\n              covid:data[5],\r\n              advisors:data[6]\r\n            });\r\n          });\r\n    });\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class PlayerDetailResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve(route: ActivatedRouteSnapshot,state: RouterStateSnapshot) {\r\n    return this.dashboardService.getPlayerById(route.paramMap.get('id'));\r\n  }\r\n}\r\n\r\n@Injectable()\r\nexport class TeamDetailResolver implements Resolve<any> {\r\n  constructor(private dashboardService: DashboardsService) {}\r\n  resolve(route: ActivatedRouteSnapshot,state: RouterStateSnapshot) {\r\n    return this.dashboardService.getTeamById(+route.paramMap.get('id'));\r\n  }\r\n}\r\n\r\n\r\n// @Injectable()\r\n// export class StraightNastyCovidResolver implements Resolve<any> {\r\n//   constructor(private dashboardService: DashboardsService) {}\r\n//   resolve() {\r\n//     return new Promise((resolve, reject) => {\r\n//       forkJoin([\r\n//         this.dashboardService.getLeadsTableData(),\r\n//         this.dashboardService.getTopSellersData(),\r\n//         this.dashboardService.getLaggingSellersData(),\r\n//         this.dashboardService.getArticles(),\r\n//         this.dashboardService.getTasks(),\r\n//         this.dashboardService.getTeam()\r\n//       ])\r\n//           .subscribe((data: any) => {\r\n//             return resolve({\r\n//               leadsData: data[0],\r\n//               topSellers: data[1],\r\n//               laggingSellers: data[2],\r\n//               articles: data[3],\r\n//               tasks: data[4],\r\n//               team: data[5]\r\n//             });\r\n//           });\r\n//     });\r\n//   }\r\n// }\r\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\nimport {CovidInterface} from \"../interfaces/covid.interface\";\nimport {BehaviorSubject} from \"rxjs\";\nimport {BigCovidProps} from \"../interfaces/covid.class\";\nimport {NumbersInterface} from \"../interfaces/numbers.interface\";\nimport {deaths} from \"../interfaces/numbers.interface\";\nimport {findAll} from \"@angular/compiler-cli/ngcc/src/utils\";\nimport {id} from \"@swimlane/ngx-charts/release/utils\";\n\n\n@Injectable()\nexport class DashboardsService {\n\n    private globalJson: string = \"/assets/data/covidglobal.json\";\n    private rankings: string = \"/assets/data/rank.json\";\n // https://api.covidtracking.com/v1/us/20201201.json\n   private currentApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n   private jan5: string = 'https://api.covidtracking.com/v1/us/20210105.json';\n    private dec28: string = 'https://api.covidtracking.com/v1/us/20201228.json';\n private janOneApi: string ='https://api.covidtracking.com/v1/us/20210101.json';\n private novOneApi: string = 'https://api.covidtracking.com/v1/us/20201101.json';\nprivate decOneApi: string = \"https://api.covidtracking.com/v1/us/20201201.json\";\n  private pacovidApi: string = 'https://api.covidtracking.com/v1/states/pa/info.json';\n  private njcovidApi: string = 'https://api.covidtracking.com/v1/states/nj/info.json';\n  private nycovidApi: string = 'https://api.covidtracking.com/v1/states/ma/info.json';\n  private macovidApi: string = 'https://api.covidtracking.com/v1/states/ca/info.json';\n  private micovidApi: string = 'https://api.covidtracking.com/v1/states/mi/info.json';\n  private covidApi: string = 'https://api.covidtracking.com/v1/us/current.json';\n  private currentCovidApi: string ='https://api.covidtracking.com/v1/us/current.json';\n  private baseApi : string = 'https://api.covidtracking.com/v1/us/';\n    private newsApi: string = 'https://newsapi.org/v2/top-headlines?country=us&apiKey=e0f7cab22d204d0b9091502244fd8ecf';\n    private teamApi: string = '/assets/data/team.json';\n    private covidSummaryApi: string = 'https://api.covid19api.com/summary';\n// historical api calls\n\n private lastDecCovidApi : string = 'https://api.covidtracking.com/v1/us/20201201.json';\n  constructor(private http: HttpClient) {\n  }\n\n    // getPolicyData(): Observable<PolicyModel[]> {\n    //     return this.http.get<PolicyModel[]>(this.policyApi).pipe(\n    //         map(results => results[\"policies\"])\n    //\n    //     );\n    // }\n    httpOptions = {\n        headers: new HttpHeaders({\n            'Content-Type': 'application/json',\n            'X-Access-Token':'5cf9dfd5-3449-485e-b5ae-70a60e997864'\n        })\n    };\n\n    getCovidSummary(): Observable<any> {\n        return this.http.get<any>(this.covidSummaryApi).pipe(\n            map(res => res[\"Countries\"])\n        );\n    }\n\n    getCovidGlobal(): Observable<any> {\n        return this.http.get('../assets/data/covidglobal.json');\n    }\n\n    getCurrentRank(): Observable<any> {\n        return this.http.get<any>('../assets/data/mock-data/idrankings.json');\n    }\n\n    getNewRankings(): Observable<any> {\n        return this.http.get<any>(this.rankings);\n    }\n    getCovidByEurope(): Observable<any> {\n      return this.http.get<any>(this.globalJson).pipe(\n          map(data => {\n              data.find(data.region === 'Europe')\n          })\n\n      )\n    }\n\n    getPlayerById(id:string): Observable<any> {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n\n    // team detail method\n\n    getTeamById(id: number): Observable<any> {\n        const url = `${this.teamApi}/${id}`;\n        return this.http.get(url);\n    }\n\n  getCovidByDate(param:NumbersInterface):Observable<NumbersInterface[]> {\n      return this.http.get<NumbersInterface[]>(this.baseApi+param + `.json`);\n  }\n\n    getCovid(): Observable<any> {\n        return this.http.get<any>(this.covidApi);\n    }\n    // filterStates(): Observable<any> {\n    //     return this.http.get<any>(this.covidApi).pipe(\n    //         map(res => )\n    //     )\n    // }\n\n    getDeathProp(): Observable<CovidInterface[]> {\n        return this.http.get<CovidInterface[]>(this.covidApi).pipe(\n            map(result =>\n                    result.filter(data => data.death == data.death)\n            )\n        );\n    }\n\n    getCovidTypes(): Observable<CovidInterface> {\n      return this.http.get<CovidInterface>(this.covidApi);\n    }\n\n  getJan5(): Observable<any> {\n      return this.http.get<any>(this.jan5);\n  }\n\n\n\n\n    getNewsHeadlines(): Observable<any> {\n        return this.http.get<any>(this.newsApi);\n    }\n\n    getDec28(): Observable<any> {\n        return this.http.get<any>(this.dec28);\n    }\n\n    getCovidDeath():Observable<deaths> {\n      return this.http.get<deaths>(this.covidApi);\n  }\n\n\n  // getCovidFields(): Observable<BigCovidProps[]> {\n  //   return this.http.get<BigCovidProps[]>(this.covidApi).pipe(\n  //       map((res) =>\n  //\n  //     )\n  //   );\n  // }\n\n    getCurrentCovidData():Observable<any> {\n        return this.http.get<any>(this.currentCovidApi);\n    }\n\n  getAllStatesCovid(): Observable<any> {\n    return this.http.get<any>(this.covidApi);\n  }\n\n  getPACovid(): Observable<any> {\n    return this.http.get<any>(this.pacovidApi);\n  }\n  getDecCovid(): Observable<any> {\n    return this.http.get<any>(this.decOneApi);\n  }\n    getJanCovid(): Observable<any> {\n    return this.http.get<any>(this.janOneApi);\n  }\n     getNovCovid(): Observable<any> {\n    return this.http.get<any>(this.novOneApi);\n  }\n\n  getNJCovid(): Observable<any> {\n    return this.http.get<any>(this.njcovidApi);\n  }\n\n  getNYCovid(): Observable<any> {\n    return this.http.get<any>(this.nycovidApi);\n  }\n\n  getMACovid(): Observable<any> {\n    return this.http.get<any>(this.macovidApi);\n  }\n\n  getMICovid(): Observable<any> {\n    return this.http.get<any>(this.micovidApi);\n  }\n\n  // team dashboard\n  getTeam(): Observable<any> {\n    return this.http.get('/assets/data/team.json');\n  }\n\n  // test - for global api\n\n    getGlobalCovid(): Observable<any> {\n      return this.http.get<any>(this.globalJson);\n    }\n\n\n    getAdvisors(): Observable<any> {\n        return this.http.get('/assets/data/advisors.json');\n    }\n\n  // ecommerce dashboard\n  getRecentOrdersTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/recent-orders-table.json');\n  }\n\n  getLatestTicketsTableData(): Observable<any> {\n    return this.http.get('/assets/data/ecommerce-dashboard/latest-tickets-table.json');\n  }\n\n  // crm dashboard\n  getLeadsTableData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/leads-table.json');\n  }\n\n  getTopSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/top-sellers.json');\n  }\n\n  getLaggingSellersData(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/lagging-sellers.json');\n  }\n\n  getArticles(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/articles.json');\n  }\n\n  getTasks(): Observable<any> {\n    return this.http.get('/assets/data/crm-dashboard/tasks.json');\n  }\n}\n\n\n"]}